name: Build and Deploy API and Portal

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install frontend dependencies
        working-directory: ./KwestKarz-Portal
        run: npm ci

      - name: Build frontend
        working-directory: ./KwestKarz-Portal
        run: npm run build
        env:
          VITE_API_BASE_URL: https://kwestkarz.lagdaemon.com/api

      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: portal-artifact
          path: ./KwestKarz-Portal/dist

      - name: Build and publish API
        run: dotnet publish ./Kwestkarz-API/KwestKarz/KwestKarz.csproj -c Release -o ./publish

      - name: Upload API build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api-artifact
          path: ./publish

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: portal-artifact
          path: portal-artifact

      - name: Download API artifacts
        uses: actions/download-artifact@v4
        with:
          name: api-artifact
          path: api-artifact

      - name: Debug portal artifact contents
        run: ls -R portal-artifact

      - name: Debug API artifact contents
        run: ls -R api-artifact

      - name: Copy frontend files to server
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          passphrase: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
          port: 22
          source: "portal-artifact/**"
          target: "/var/www/html"
      
      - name: Copy API files to server
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          passphrase: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
          port: 22
          source: "api-artifact/**"
          target: "/var/www/html"
      
      - name: Deploy to server via SSH 
        uses: appleboy/ssh-action@v0.1.7
        env:
          DEPLOY_SUDO_PASSWORD: ${{ secrets.DEPLOY_SUDO_PASSWORD }}
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          passphrase: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
          port: 22
          script: |
            echo "$DEPLOY_SUDO_PASSWORD" | sudo -S systemctl stop kwestkarz.service || true
            echo "$DEPLOY_SUDO_PASSWORD" | sudo -S rm -rf /var/www/html/*
            export DOTNET_ROOT=~/.dotnet
            export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools:~/.dotnet/tools
            mkdir -p ~/.dotnet/tools
            dotnet tool install dotnet-ef --tool-path ~/.dotnet/tools || true
            export ConnectionStrings__KwestKarzDb="${{ secrets.CONNECTION_STRING }}"
            export google__email="${{ secrets.GOOGLE_EMAIL_ADDR }}"
            export google__password="${{ secrets.GOOGLE_SMTP_PASSWORD }}"
            cd /home/${{ secrets.DROPLET_USER }}/kwestkarz-src/api-source
            ~/.dotnet/tools/dotnet-ef database update --project KwestKarz.csproj
            echo "${{ secrets.DEPLOY_SUDO_PASSWORD }}" | sudo -S systemctl start kwestkarz.service
