name: Build and Deploy App and API

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Build and publish API
        run: dotnet publish ./Kwestkarz-API/KwestKarz/KwestKarz.csproj -c Release -o ./publish

      - name: Upload API artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-artifact
          path: ./publish

      - name: Upload API source
        uses: actions/upload-artifact@v4
        with:
          name: api-source
          path: ./Kwestkarz-API

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies and build React app
        working-directory: ./KwestKarz-Portal
        run: |
          npm ci
          npm run build

      - name: Upload React artifact
        uses: actions/upload-artifact@v4
        with:
          name: portal-artifact
          path: ./KwestKarz-Portal/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Download API artifact
        uses: actions/download-artifact@v4
        with:
          name: api-artifact
          path: ./api-artifact

      - name: Download API source
        uses: actions/download-artifact@v4
        with:
          name: api-source
          path: ./api-source

      - name: Download Portal artifact
        uses: actions/download-artifact@v4
        with:
          name: portal-artifact
          path: ./portal-artifact

      - name: Upload API build to Droplet
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          passphrase: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
          port: 22
          source: "./api-artifact/*"
          target: "/home/${{ secrets.DROPLET_USER }}/kwestkarz-app/"

      - name: Upload API source to Droplet
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          passphrase: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
          port: 22
          source: "./api-source/*"
          target: "/home/${{ secrets.DROPLET_USER }}/kwestkarz-src/"

      - name: Upload Portal to web root
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          passphrase: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
          port: 22
          source: "./portal-artifact/*"
          target: "/var/www/html/"

      - name: Run migration and restart API
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          passphrase: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
          port: 22
          script: |
            set -e
            echo "$DEPLOY_SUDO_PASSWORD" | sudo -S systemctl stop kwestkarz.service || true
            export DOTNET_ROOT=~/.dotnet
            export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools:~/.dotnet/tools
            mkdir -p ~/.dotnet/tools
            dotnet tool install dotnet-ef --tool-path ~/.dotnet/tools || true
            export ConnectionStrings__KwestKarzDb="Host=localhost;Database=kwestkarz;Username=kwestkarz_user;Password=htrv6gpl1234!@#$"
            export google__email="${{ secrets.GOOGLE_EMAIL_ADDR }}"
            export google__password="${{ secrets.GOOGLE_SMTP_PASSWORD }}"
            cd /home/${{ secrets.DROPLET_USER }}/kwestkarz-src/Kwestkarz-API/KwestKarz
            ~/.dotnet/tools/dotnet-ef database update --project KwestKarz.csproj
            echo "$DEPLOY_SUDO_PASSWORD" | sudo -S systemctl start kwestkarz.service
